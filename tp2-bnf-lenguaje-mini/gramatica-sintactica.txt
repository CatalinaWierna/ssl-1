primaria:
	constante-entera
	identificador
	( expresion-aditiva )

expresion-unaria:
	primaria
	- primaria

----- Nota: probablemente haya que basarse como en el pdf 14. Motivo: eliminar la recursividad del PAS
expresion-multiplicativa:
	expresion-unaria
	expresion-multiplicativa * expresion-unaria
	expresion-multiplicativa / expresion-unaria

expresion-aditiva:
	expresion-multiplicativa
	expresion-aditiva + expresion-multiplicativa
	expresion-aditiva - expresion-multiplicativa
----- Nota: probablemente haya que basarse como en el pdf 14. Motivo: eliminar la recursividad del PAS

lista-identificadores:
	identificador , lista-identificadores
	identificador

sentencia:
	identificador <- expresion-aditiva ;
	declarar identificador ;
	leer ( lista-identificadores ) ;
	escribir ( expresion-aditiva ) ;

lista-sentencias:
	lista-sentencias sentencia
	sentencia

programa-mini:
	programa lista-sentencias(sub(opt)) fin-prog

Observaciones:
Los comentarios (sucesión de caracteres conformadas por doble numeral (##) como prefijo a la cadena de comentario),
son ignorados por el analizador léxico, no dando lugar a ser conocida por el analizar sintáctico.
No se conoce a los comentarios en las gramáticas, tanto sintáctica como léxica, como elementos que conformen a
alguna de estas dos categorías en cuestión.

------------------------------------------------------- De acá para abajo son cosas con fines de borrador -------------------------------------------------------
Nota para el desarrollador:
Pre) El axioma se ubica abajo de todo (programa-mini).
1) <- no es un operador en el lenguaje micro. La asignación en el lenguaje micro
se encuentra en una construcción sintáctica de sentencia, no está a partir
de una expresion, en donde se pueda meter la asignación.
-------------------------------------------------------
lista-identificadores:
	identificador resto-identificadores(sub(opt))

resto-identificadores:
	, identificador resto-identificadores
	, identificador

A: lista-identificadores
alfa: , identificador
beta: identificador

A -> beta R
R -> alfa R | eps

lista-identificadores:
	identificador resto-identificadores(sub(opt))

resto-identificadores:
	, identificador resto-identificadores
-------------------------------------------------------
_En caso de agregar, agregarlo encima de lista-identificadores_

lista-expresiones:
	lista-expresiones , expresion-aditiva
	expresion-aditiva
-------------------------------------------------------
lista-identificadores:
	lista-identificadores , identificador
	identificador
-------------------------------------------------------
----- TODO: optar por alguno de los dos
----- inicio forma 1
expresion-unaria:
	operador-unario(sub(opt)) primaria

operador-unario:
	-
----- fin forma 1
-------------------------------------------------------
